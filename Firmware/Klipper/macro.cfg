[gcode_macro CHECK_DISH_IN]
description: "Check if dish is at input"
gcode:
    QUERY_ENDSTOP NAME = dish_in

[gcode_macro CHECK_DISH_OUT]
description: "Check if dish has left output"
gcode:
    QUERY_ENDSTOP NAME = dish_out

[gcode_macro CHECK_STACK_FULL]
description: "Check if stack is full"
gcode:
    QUERY_ENDSTOP NAME = stack_full

[gcode_macro WAIT_FOR_DISH_IN]
description: "Wait for dish at input"
gcode:
    RESPOND MSG = "Waiting for dish..."
    WAIT_FOR_ENDSTOP dish_in STATE=TRIGGERED TIMEOUT = 10000
    RESPOND MSG = "Dish detected!"

[gcode_macro home_transverse]
description: Homes the transverse pusher
gcode:


[gcode_macro push_transverse]
description: Moves the transverse pusher to the push position
gcode:


[gcode_macro home_elevator]
description: Homes the elevators
gcode:

[gcode_macro receive_elevator]
description: Moves the elevators to the zero dish receiving position
gcode:

[gcode_macro position_elevator]
description: Moves the elevators to the specified row position
gcode:
    # input number of rows on elevator and pass through variable to postion_elevator macro
    # example: {action_1} = 5 for row 5
    #G1 U{action_1*10} F100

    {% set row = params.ROW|int %}
    RESPOND MSG="Moving elevator to row {row}"
    G1 U{row*10} F100

[gcode_macro interlock_elevator]
description: Moves the elevators to the interlock loading position
gcode:

[gcode_macro home_interlock]
description: Homes the interlock plate pusher
gcode:

[gcode_macro push_interlock]
description: Moves the interlock plate pusher to the push position
gcode:

[gcode_macro home_staging]
description: Homes the staging pusher
gcode:

[gcode_macro push_staging]
description: Moves the staging pusher to the push position
gcode:
    {% if printer.query_endstop.stack_full.triggered %}
        RESPOND MSG="Stack full! Not pushing."
    {% else %}
        RESPOND MSG="Stack has room, pushing..."
        G1 Y100 F200
        G1 Y0 F200
    {% endif %}

[gcode_macro push_transverse]
description: Moves the transverse pusher to the push position
gcode: 
    RESPOND MSG = "Checking for dish..."
    {% if printer.query_endstop.dish_in.triggered %}
        RESPOND MSG = "Dish detected, pushing..."
        G1 X100 F200   ; move forward (adjust values)
        G1 X0 F200     ; return to home
    {% else %}
        RESPOND MSG="No dish detected. Skipping push."
    {% endif %}

[gcode_macro home_all]
description: Homes all axes
gcode:
    G28 X Y Z U

[gcode_macro recover_all]
description: Recovers from an emergency stop by homing all axes then prompting user
gcode:
    M18 X Y Z U
    M0
    G28 X Y Z U
    M117 Recovery complete. Please verify number of rows on elevator and resume.

    # input number of rows on elevator and pass through variable to postion_elevator macro

[gcode_macro Estop]
description: Emergency stop the device
gcode:

[gcode_macro initialize]
description: Initializes the device
gcode:

[gcode_macro shutdown]
description: Shutdown the device safely
gcode:

[gcode_macro start]
description: Starts the device operation
gcode:

[gcode_macro ]
